{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaimage","alt","websiteTitle","href","rel","button","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6568b398.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__13pS4\",\"card\":\"Cards_card__1f3l7\",\"infected\":\"Cards_infected__2Eb-8\",\"recovered\":\"Cards_recovered__2lT3Y\",\"deaths\":\"Cards_deaths__2by3X\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\n//for providing styles for different components\r\nimport cx from 'classnames';\r\n\r\n\r\nconst Cards = ({data: {confirmed, deaths, recovered, lastUpdate}}) => {\r\n\r\n    if (!confirmed){\r\n        return \"Loading...\";\r\n\r\n    }\r\n    // console.log(confirmed.value, deaths.value, recovered.value, lastUpdate.value);\r\n    \r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs ={12} md ={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent> \r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {confirmed.value} duration = {1} separator = \",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active covid-19 Cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs ={12} md ={3} className={cx(styles.card, styles.recovered)}>\r\n\r\n                    <CardContent> \r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start = {0} end = {recovered.value} duration = {1} separator = \",\"/>\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\r\n                        <Typography variant=\"body2\">Number of recoveries</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs ={12} md ={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent> \r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start = {0} end = {deaths.value} duration = {1} separator = \",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\r\n                        <Typography variant=\"body2\">Number of total deaths by Covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changableUrl = url;\r\n\r\n  if(country){\r\n    changableUrl = `${url}/countries/${country}`;\r\n  }\r\n    try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changableUrl);\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n        }\r\n    catch (error) {\r\n      console.log(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        // console.log(data);\r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n  try {\r\n    const {data: {countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'; \r\n\r\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        // console.log(dailyData);\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n        <Line\r\n        data = {{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n\r\n            }, {\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n\r\n            }],\r\n        }}\r\n        />) : null\r\n    )\r\n\r\n    // console.log(confirmed, recovered, deaths);\r\n\r\n    const barChart = (\r\n      confirmed\r\n      ? (\r\n        <Bar \r\n        data = {{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [{\r\n            label: 'People',\r\n            backgroundColor: [\r\n              'rgba(0,0,255,0.5)',\r\n              'rgba(0,255,0,0.5)',\r\n              'rgba(255,0,0,0.5)',\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value]\r\n\r\n          }],\r\n        }}\r\n        options = {{\r\n          legend: {display: false},\r\n          title: {display: true, text: `Current state in ${country}`,}\r\n        }}\r\n        />) : null\r\n    )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n          {country? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect ( () => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  // console.log(fetchedCountries);\r\n\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n          <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n            <option value=\"\">Global</option>\r\n            {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n          </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\n\r\nimport { fetchData } from './api';\r\nimport coronaimage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data: fetchedData });\r\n\r\n        // console.log(fetchedData);\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n\r\n        // console.log(fetchedData); \r\n        this.setState({ data: fetchedData, country: country });\r\n        //fetch data\r\n        //set the state\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaimage} alt=\"COVID-19\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n                <h3 className={styles.websiteTitle}>About Developer</h3>\r\n                <span> Hello I am Deepesh and I'm intensively learning and putting to use my knowledge of programming in Javascript into building web and native applications.</span>\r\n                <ul>Technology used\r\n                    <li>React JS</li>\r\n                    <li>Chart JS</li>\r\n                    <li><a href=\"https://covid19.mathdro.id/api\" target=\"_blank\" rel=\"noopener noreferrer\">Api</a></li>\r\n                </ul>\r\n                <a className={styles.button} href=\"https://www.github.com/deepyes02\">Visit My Github</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__9nxzP\",\"image\":\"App_image__1zxmb\",\"button\":\"App_button__2sWSH\",\"websiteTitle\":\"App_websiteTitle__c5CRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2OzrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3jMhX\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}
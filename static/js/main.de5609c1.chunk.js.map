{"version":3,"sources":["components/Cards/Cards.module.css","App.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/virus_image.jpg"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","className","styles","container","date","Typography","color","Date","toDateString","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","gutterBottom","variant","start","end","value","duration","separator","toFixed","url","fetchData","country","a","changableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","cover","image","src","virus_image","alt","websiteTitle","href","rel","button","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de5609c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__13pS4\",\"card\":\"Cards_card__1f3l7\",\"infected\":\"Cards_infected__2Eb-8\",\"recovered\":\"Cards_recovered__2lT3Y\",\"deaths\":\"Cards_deaths__2by3X\",\"date\":\"Cards_date__1JpA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__9nxzP\",\"cover\":\"App_cover__1Jjh_\",\"image\":\"App_image__1zxmb\",\"button\":\"App_button__2sWSH\",\"websiteTitle\":\"App_websiteTitle__c5CRp\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\n//for providing styles for different components\r\nimport cx from 'classnames';\r\n\r\n\r\nconst Cards = ({data: {confirmed, deaths, recovered, lastUpdate}}) => {\r\n\r\n    if (!confirmed){\r\n        return \"Loading...\";\r\n\r\n    }\r\n    // console.log(confirmed.value, deaths.value, recovered.value, lastUpdate.value);\r\n    \r\n    \r\n    return(\r\n        <div className={styles.container}>\r\n            <div className={styles.date}>\r\n            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n            </div>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs ={12} md ={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent> \r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start = {0} end = {confirmed.value} duration = {1} separator = \",\"/>\r\n                        </Typography>\r\n    <Typography variant=\"body2\">Percentage of World Population(%): {(confirmed.value/7800000000).toFixed(5)}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs ={12} md ={3} className={cx(styles.card, styles.recovered)}>\r\n\r\n                    <CardContent> \r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start = {0} end = {recovered.value} duration = {1} separator = \",\"/>\r\n                            </Typography>\r\n                        <Typography variant=\"body2\">Percentage of World Population(%): {(recovered.value/7800000000).toFixed(5)}</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs ={12} md ={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent> \r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp start = {0} end = {deaths.value} duration = {1} separator = \",\"/>\r\n                        </Typography>\r\n                        <Typography  variant=\"body2\">Percentage of World Population(%): {(deaths.value/780000000).toFixed(5)}  </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changableUrl = url;\r\n\r\n  if(country){\r\n    changableUrl = `${url}/countries/${country}`;\r\n  }\r\n    try {\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changableUrl);\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n\r\n        }\r\n    catch (error) {\r\n      console.log(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const {data} = await axios.get(`${url}/daily`);\r\n        // console.log(data);\r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n\r\n        return modifiedData;\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n  try {\r\n    const {data: {countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n    \r\n  }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'; \r\n\r\nconst Chart = ({data: {confirmed, deaths, recovered}, country}) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        // console.log(dailyData);\r\n\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n        <Line\r\n        data = {{\r\n            labels: dailyData.map(({date}) => date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed}) => confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n\r\n            }, {\r\n                data: dailyData.map(({deaths}) => deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255,0,0,0.5)',\r\n                fill: true,\r\n\r\n            }],\r\n        }}\r\n        />) : null\r\n    )\r\n\r\n    // console.log(confirmed, recovered, deaths);\r\n\r\n    const barChart = (\r\n      confirmed\r\n      ? (\r\n        <Bar \r\n        data = {{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [{\r\n            label: 'People',\r\n            backgroundColor: [\r\n              'rgba(0,0,255,0.5)',\r\n              'rgba(0,255,0,0.5)',\r\n              'rgba(255,0,0,0.5)',\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value]\r\n\r\n          }],\r\n        }}\r\n        options = {{\r\n          legend: {display: false},\r\n          title: {display: true, text: `Current state in ${country}`,}\r\n        }}\r\n        />) : null\r\n    )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n          {country? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect ( () => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    }\r\n    fetchAPI();\r\n  }, [setFetchedCountries]);\r\n\r\n  // console.log(fetchedCountries);\r\n\r\n    return(\r\n          <FormControl className={styles.formControl}>\r\n          <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n            <option value=\"\">Global</option>\r\n            {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n          </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\n\r\nimport { fetchData } from './api';\r\nimport virus_image from './images/virus_image.jpg';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data: fetchedData });\r\n\r\n        // console.log(fetchedData);\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n\r\n        // console.log(fetchedData); \r\n        this.setState({ data: fetchedData, country: country });\r\n        //fetch data\r\n        //set the state\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container}>\r\n                <div className={styles.cover}>\r\n                    <h2>COVID 19</h2>\r\n                <img className={styles.image} src={virus_image} alt=\"COVID-19\" />\r\n                </div>\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n                <div className={styles.websiteTitle}>\r\n                <h4>About Developer</h4>\r\n                <span> Hello I am Deepesh and I'm intensively learning and putting to use my knowledge of programming in Javascript into building web and native applications. This app is showing data from an api and will be correct to the extent of the accuracy of the data available.</span>\r\n                <h4>Made with ❤ Using </h4>\r\n                <ul>\r\n                    <li>React JS</li>\r\n                    <li>Chart JS</li>\r\n                    <li><a href=\"https://covid19.mathdro.id/api\" target=\"_blank\" rel=\"noopener noreferrer\">Api</a></li>\r\n                </ul>\r\n                </div>\r\n                <a className={styles.button} href=\"https://www.github.com/deepyes02\">Visit My Github</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2OzrH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3jMhX\"};","module.exports = __webpack_public_path__ + \"static/media/virus_image.a985e79f.jpg\";"],"sourceRoot":""}